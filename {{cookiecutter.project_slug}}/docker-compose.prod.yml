
services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn {{cookiecutter.project_slug}}.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app/web/deploy/static:/home/app/web/deploy/static
      - ./app/web/deploy/media:/home/app/web/deploy/media      
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - worker
  db:
    image: postgres:15
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    volumes:
      - ./app/web/deploy/static:/home/app/web/static
      - ./app/web/deploy/media:/home/app/web/media
    ports:
      - 1337:80

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    # ports: 
    # - 25672:25672 # (erlang) communication between the nodes and CLI tool
    # - 15672:15672 # communication with the web management API

    env_file:
      - ./.env.dev

  worker:
    build: ./app
    command: celery -A {{cookiecutter.project_slug}} worker -l info # --concurrency=8
    env_file:
      - ./.env.dev
    depends_on:
      - rabbitmq
    restart: always
    # ports: 
    # - 5555:5555

  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=amqp://{{cookiecutter.project_slug}}:{{cookiecutter.rabbitmq_password}}@rabbitmq:5672//', '--port=5556']  # Set broker URL to RabbitMQ
    ports:
      - 5556:5556
    depends_on:
      - worker
    restart: always

